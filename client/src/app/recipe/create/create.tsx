import Head from "next/head";
import MaininfoEdit from "~/utils/components/FormsElements/MaininfoEdit";
import Footer from "~/utils/components/Footer";
import Navbar from "~/utils/components/Navbar";
import StepsInput from "../../../utils/components/FormsElements/StepsInput";
import { useEffect, useState } from "react";
import { type Recipe } from "@prisma/client";
import { signIn, useSession } from "next-auth/react";

export default function Create() {
  const { data: session, status } = useSession();
  const defaultState = {
    id: "ad",
    authorId: session?.user.id ?? "",
    title: "",
    description: "",
    ingredients: [],
    steps: [],
  };
  const [recipe, setRecipe] = useState<Recipe>(defaultState);

  if (status == "unauthenticated") void signIn();

  return (
    <>
      <Head>
        <title>CookNet</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className=" flex min-h-screen flex-col items-center justify-center bg-white ">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="flex w-full items-start justify-between gap-4 ">
            <button
              onClick={() => {
                if (recipe != defaultState) prompt("You will lose you're data");
              }}
              className="flex items-center justify-center gap-2 border border-black px-5 py-2"
            >
              <div className="text-base font-normal leading-normal text-black">
                Go Back
              </div>
            </button>
            <button className="flex items-center justify-center gap-2 border border-black bg-black px-5 py-2">
              <div className="text-base font-normal leading-normal text-white">
                Create
              </div>
            </button>
          </div>
          <MaininfoEdit
            onChange={(mainInfo) =>
              setRecipe((prev) => ({
                ...prev,
                title: mainInfo.title,
                description: mainInfo.description,
                ingredients: mainInfo.ingredients,
              }))
            }
          />
          <StepsInput
            onChange={(steps) =>
              setRecipe((prev) => ({ ...prev, steps: steps }))
            }
          />
        </div>
      </main>
      <Footer />
    </>
  );
}
